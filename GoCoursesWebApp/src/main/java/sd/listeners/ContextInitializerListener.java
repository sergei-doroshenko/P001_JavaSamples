package sd.listeners;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import sd.dao.ProductDao;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Logger;

/**
 * Created by Sergei on 27.04.2015.
 */
public class ContextInitializerListener implements ServletContextListener {
    private Logger log = Logger.getLogger("ContextInitializer");

    public void contextInitialized(ServletContextEvent servletContextEvent) {

        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("/application-context.xml");

        /*DataSource dataSource = (DataSource) applicationContext.getBean("dataSource");

        try (
                Connection connetion = dataSource.getConnection();
                Statement st = connetion.createStatement();
        ) {
            st.execute("CREATE SCHEMA playground AUTHORIZATION DBA\n" +
                 "CREATE MEMORY TABLE products(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, prod_name VARCHAR(40) NOT NULL);\n" +
                 "GRANT DBA TO SA;\n" +
                 "\n" +
                 "INSERT INTO products (id, prod_name) VALUES (1, 'Felix');");

        } catch (SQLException e) {
            e.printStackTrace();
        }*/

        ProductDao dao = (ProductDao) applicationContext.getBean("productDao");

        servletContextEvent.getServletContext().setAttribute("productDao", dao);
    }

    public void contextDestroyed(ServletContextEvent servletContextEvent) {

    }
}
